/*
题目描述
某校大门外长度为 l 的马路上有一排树，每两棵相邻的树之间的间隔都是 1 米。我们可以把马路看成一个数轴，马路的一端在数轴 0 的位置，另一端在 l 的位置；数轴上的每个整数点，即 0,1,2,…,l，都种有一棵树。

由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。

输入格式
第一行有两个整数，分别表示马路的长度 l 和区域的数目 m。

接下来 m 行，每行两个整数 u,v，表示一个区域的起始点和终止点的坐标。

输出格式
输出一行一个整数，表示将这些树都移走后，马路上剩余的树木数量。
*/
#include<stdio.h>

int main()
{
    int l, m, count = 0;//count为将要被砍的树的棵数
    int a[10001], b[100][2];//a[]为即将为树编号的数组
    scanf("%d%d", &l, &m);
    for (int i = 0; i < l + 1; i++)
    {
        a[i] = i;//为树编号
    }
    for (int n = 0; n < m; n++)
    {
        scanf("%d%d", &b[n][0], &b[n][1]);
    }
    for (int s = 0; s < m; s++)
    {
        for (int q = 0; q < l + 1; q++)
        {
            if (a[q] <= b[s][1] && a[q] >= b[s][0])//一旦树的编号处于规定的区间中，把树编号变为-1
            {
                count++;//不要忘记加一
                a[q] = -1;
            }
        }
    }
    printf("%d", l + 1 - count);//审题：剩下树的棵数
    return 0;
}
